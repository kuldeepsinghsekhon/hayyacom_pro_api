{"version":3,"sources":["reducers/user.js","reducers/event.js","reducers/invitation.js","reducers/index.js","store.js","logo.svg","utils/api.js","constant.js","components/Loader.jsx","components/Alert.jsx","components/Login.jsx","actions/User.js","api/login.js","components/LeftMenu.jsx","components/RightMenu.jsx","logo.png","components/Navbar.jsx","utils/validationMessages.js","components/AddContacts.jsx","api/contacts.js","components/EditContact.jsx","components/ContactsList.jsx","components/UploadContacts.jsx","containers/Contacts.js","actions/Event.js","components/AddEvent.jsx","api/events.js","components/EditEvent.jsx","components/ShowEvent.jsx","components/Invitations.jsx","actions/Invitaion.js","components/Stats.jsx","containers/Dashboad.js","containers/Home.js","components/TopRightMenu.jsx","components/TopNavbar.jsx","components/InvitaionPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["INITIAL_STATE","user","activeTab","contacts","UserReducer","state","action","type","payload","checkId","filter","contact","id","length","push","concat","findIndex","splice","events","EventReducer","event","localStorage","setItem","invitations","InvitationReducer","invitation","combineReducers","store","createStore","reducers","applyMiddleware","thunk","getHeaders","token","getItem","apiReq","endPoint","data","method","headers","requestOptions","Promise","resolve","reject","params","paramsSerializer","qs","stringify","arrayFormat","axios","then","result","status","catch","error","apiGet","apiPost","apiPatch","API_URL","APP_URL","LoaderContainer","styled","div","Loader","size","AlertConatainer","Alerts","props","console","log","message","showIcon","closable","LoginContainer","LoginContent","Heading","a","h1","connect","dispatch","saveUserData","useState","setMessage","isLoading","setLoading","messageType","setMessageType","Alert","name","initialValues","remember","onFinish","values","res","JSON","history","err","response","onFinishFailed","errorInfo","Item","label","rules","required","country","Password","htmlType","setActiveTab","setTab","mode","defaultSelectedKeys","onClick","href","RightMenu","locale","setlocale","changeLocale","removeItem","Group","value","onChange","Button","en_US","ar_EG","Navbar","visible","setvisible","className","src","logo","title","placement","onClose","validateMessages","types","email","number","range","AddNewContacts","addNewContacts","setVisible","centered","footer","onCancel","initialValue","min","Error","p","EditContacts","editContact","parse","phoneNumber","phone","setPhone","setError","closeModal","totalGuest","totalChildren","editContactsApi","inputProps","e","Column","Modal","confirm","Table","SaveContacts","saveContacts","RemoveContact","selectedContact","setSelectedContact","useEffect","userData","inviteContact","contactId","userId","eventId","inviteContactsApi","wtsappMessage","locationurl","encodeURI","wtsappLink","window","open","dataSource","dataIndex","render","text","record","AddNewContactsBulk","addNewContactsBulk","accept","file","target","files","reader","FileReader","readAsText","onload","csv","lines","split","trim","i","obj","currentline","j","csvJSON","onerror","ContactButtonsContainer","Contacts","ContactsList","saveEvents","AddNewEvent","addNewEvent","EditEvents","editEvents","description","editEventsApi","invitationLink","reminderMessage","SaveEvents","selectedEvent","setSelectedEvent","SaveInvitations","saveInvitations","CardsContainer","Stats","setData","gutter","span","bordered","acceptCount","declinedCount","nullCount","ShowEvent","Invitations","Header","Layout","Content","Footer","Helmet","titleTemplate","defaultTitle","content","style","position","zIndex","width","padding","marginTop","minHeight","textAlign","TopRightMenu","TopNavbar","Meta","Sider","Card","QRContainer","InfoContainer","InviteImage","img","InviteBody","invite","setInvite","match","elm","document","createElement","innerHTML","fontUrl","head","appendChild","removeChild","invitationAction","updateInvitation","margin","cover","alt","actions","CheckOutlined","CloseOutlined","entranceLink","bgColor","fgColor","color","fontFamily","checkRoute","App","exact","path","component","Login","Home","InvitaionPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.0b81832e.chunk.js","sourcesContent":["const INITIAL_STATE = {\n    user: {},\n    activeTab: \"dashboard\",\n    contacts: []\n}\n\nconst UserReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case 'SAVE_USER_DATA':\n            return {\n                ...state,\n                \"user\": action.payload\n            }\n        break;\n        case \"SET_ACTIVE_TAB\":\n            return {\n                ...state,\n                \"activeTab\": action.payload\n            }\n        break;\n        case \"SAVE_USER_CONTACTS\":\n            return {\n                ...state,\n                \"contacts\": action.payload\n            }\n        break;\n        case \"ADD_NEW_CONTACT\": {\n            let {contacts} = state\n            const checkId = contacts.filter(contact => contact.id === action.payload.id)\n            if(!checkId.length){\n                contacts.push(action.payload)\n                return {\n                    ...state,\n                    \"contacts\": [...contacts]\n                }\n            }\n        }\n        break;\n        case \"ADD_NEW_CONTACT_BULK\": {\n            let {contacts} = state\n            contacts = contacts.concat(action.payload)\n            return {\n                ...state,\n                \"contacts\": [...contacts]\n            }\n        }\n        break;\n        case \"REMOVE_CONTACT\": {\n            let {contacts} = state\n            const checkId = contacts.findIndex(contact => contact.id === action.payload)\n            if(checkId > -1){\n                contacts.splice(checkId, 1)\n                return {\n                    ...state,\n                    \"contacts\": [...contacts]\n                }\n            }\n        }\n        break;  \n        case \"EDIT_CONTACT\": {\n            let {contacts} = state\n            const checkId = contacts.findIndex(contact => contact.id === action.payload.id)\n            if(checkId > -1){\n                contacts.splice(checkId, 1, action.payload)\n                return {\n                    ...state,\n                    \"contacts\": [...contacts]\n                }\n            }\n        }\n        break;\n        \n     default:\n      return state\n    }\n}\nexport default UserReducer","const INITIAL_STATE = {\n    events: []\n}\n\nconst EventReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case \"SAVE_USER_EVENTS\":\n            return {\n                ...state,\n                \"events\": action.payload\n            }\n        break;\n        case \"ADD_NEW_EVENT\": {\n            let {events} = state\n            const checkId = events.filter(event => event.id === action.payload.id)\n            if(!checkId.length){\n                events.push(action.payload)\n                localStorage.setItem(\"event\",action.payload)\n                return {\n                    ...state,\n                    \"events\": [...events]\n                }\n            }\n        }\n        break;\n        case \"REMOVE_EVENT\": {\n            let {events} = state\n            const checkId = events.findIndex(event => event.id === action.payload)\n            if(checkId > -1){\n                events.splice(checkId, 1)\n                return {\n                    ...state,\n                    \"events\": [...events]\n                }\n            }\n        }\n        break;  \n        case \"EDIT_EVENT\": {\n            let {events} = state\n            const checkId = events.findIndex(event => event.id === action.payload.id)\n            if(checkId > -1){\n                events.splice(checkId, 1, action.payload)\n                return {\n                    ...state,\n                    \"events\": [...events]\n                }\n            }\n        }\n        break;\n        \n     default:\n      return state\n    }\n}\nexport default EventReducer","const INITIAL_STATE = {\n    invitations: []\n}\n\nconst InvitationReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case \"SAVE_USER_INVITATIONS\":\n            return {\n                ...state,\n                \"invitations\": action.payload\n            }\n        break;\n        case \"ADD_NEW_INVITATION\": {\n            let {invitations} = state\n            const checkId = invitations.filter(invitation => invitation.id === action.payload.id)\n            if(!checkId.length){\n                invitations.push(action.payload)\n                return {\n                    ...state,\n                    \"invitations\": [...invitations]\n                }\n            }\n        }\n        break;\n     default:\n      return state\n    }\n}\nexport default InvitationReducer","import { combineReducers } from 'redux';\nimport UserReducer from './user';\nimport EventReducer from './event';\nimport InvitationReducer from \"./invitation\"\nexport default combineReducers({\n    UserReducer: UserReducer,\n\tEventReducer: EventReducer,\n\tInvitationReducer: InvitationReducer\n});","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\n\nexport const store = createStore( reducers, applyMiddleware(thunk));","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from 'axios';\nimport qs from 'query-string';\n\nexport function logOut() {\n    if (window.refreshTokenInterval) {\n        clearInterval(window.refreshTokenInterval)\n        window.refreshTokenInterval = null\n    }\n    if (window.refreshDataInterval) {\n        clearInterval(window.refreshDataInterval)\n        window.refreshDataInterval = null\n    }\n}\n\nexport const checkUserAuth = () => localStorage.getItem('login user')\n\nexport function getHeaders() {\n    let token = localStorage.getItem('token');\n    \n    const headers = {\n        \"Access-Control-Allow-Origin\": \"*\",\n        'Authorization': `Bearer ${token}` || '',\n        'Content-Type': 'application/json',\n    }\n    return headers\n}\n\nexport function apiReq(endPoint, data, method, headers, requestOptions = {}, shouldRefreshToken = true) {\n    return new Promise((resolve, reject) => {\n        headers = {\n            ...getHeaders(),\n            ...headers,\n        }\n        if (method === 'get' || method === 'delete') {\n            data = {\n                ...requestOptions,\n                params: data,\n                headers,\n                data: {},\n            }\n            data.paramsSerializer = params => qs.stringify(params, { arrayFormat: 'repeat' })\n        }\n        axios[method](endPoint, data, { headers })\n            .then((result) => {\n                const { data } = result\n                if (data.status === false) {\n                    return reject(data)\n                }\n                return resolve(data)\n            })\n            .catch(error => {\n                return reject(error)\n            })\n    })\n}\nexport function apiGet(endPoint, data, headers = {}, requestOptions) {\n    return apiReq(endPoint, data, 'get', headers, requestOptions)\n}\nexport function apiPost(endPoint, data, headers = {}, requestOptions) {\n    return apiReq(endPoint, data, 'post', headers, requestOptions)\n}\nexport function apiPatch(endPoint, data, headers = {}, requestOptions) {\n    return apiReq(endPoint, data, 'patch', headers, requestOptions)\n}\nexport function apiPut(endPoint, data, headers = {}, requestOptions) {\n    return apiReq(endPoint, data, 'put', headers, requestOptions)\n}\nexport function apiDelete(endPoint, data, headers = {}, requestOptions) {\n    return apiReq(endPoint, data, 'delete', headers, requestOptions)\n}","export const API_URL = \"http://hayyacom.net:3004\"\r\nexport const APP_URL = \"http://hayyacom.net:3004\"","import { Spin, Space } from 'antd';\nimport styled from 'styled-components'\n\nconst LoaderContainer = styled.div`\n   position: fixed;\n    width: 100vw;\n    height: 100vh;\n    background: black url(spinner.gif) center center no-repeat;\n    opacity: 0.5;\n    display: flex;\n    justify-content: center;\n    z-index: 1;\n`\n\nconst Loader = () => {\n    return (\n        <LoaderContainer>\n            <Space size=\"middle\">\n                <Spin size=\"large\" />\n            </Space>,\n        </LoaderContainer>\n    )\n}\n\nexport default Loader","import { Alert } from 'antd';\nimport styled from 'styled-components'\n\nconst AlertConatainer = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: flex-end;\n    position: fixed;\n    align-items: flex-start;\n    top: 72px;\n    right: 22px;\n`\n\nconst Alerts = (props) => {\n    console.log(\"props\", props)\n    return (\n        <AlertConatainer>\n            <Alert\n                message={props.message}\n                // description={props.message}\n                type={props.type}\n                showIcon\n                closable\n            />\n        </AlertConatainer>\n    )\n}\nexport default Alerts","import React, {useState} from 'react'\nimport { Form, Input, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport {saveUserData} from \"../actions/User\";\nimport {loginApi} from \"../api/login\";\nimport Loader from \"./Loader\";\nimport Alerts from \"./Alert\";\nimport PhoneInput from 'react-phone-input-2';\n\n\nconst LoginContainer = styled.div`\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\nconst LoginContent = styled.div`\n    padding: 50px;\n    box-shadow: 3px 4px 10px #9c9999;\n    text-align: center;\n`\nconst SignupLink = styled.a`\n    padding: 10px;\n`\nconst Heading = styled.h1`\n    margin-bottom : 15px;\n`\nconst Login = (props) => {\n\n    const [message, setMessage] = useState('');\n    const [isLoading, setLoading] = useState(false);\n    const [messageType, setMessageType] = useState('');\n\n    const onFinish = (values) => {\n        setMessage(\"\")\n        setLoading(true)\n        loginApi(values)\n        .then(res => {\n            setLoading(false)\n            setMessageType('success')\n            const { data, token } = res;\n            localStorage.setItem('loginUser', JSON.stringify(data));\n            localStorage.setItem('token', token);\n            props.saveUserData(data)\n            props.history.push('/home');\n        })\n        .catch(err => {\n            console.log(\"err\", err)\n            const {message} = err.response.data\n            setMessageType('error')\n            setMessage(message)\n            setLoading(false)\n        })\n    };\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    return (\n        <LoginContainer>\n        {isLoading && <Loader />}\n        {message && <Alerts type={messageType} message={message}/>}\n        <LoginContent>\n            <Heading>Login</Heading>  \n            <Form\n                name=\"basic\"\n                initialValues={{\n                    remember: true,\n                }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n            >\n            <Form.Item\n                label=\"phone Number\"\n                name=\"phoneNumber\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your number!',\n                    }\n                ]}\n            >\n                <PhoneInput\n                    country={'sa'}\n                />\n            </Form.Item>\n\n            <Form.Item\n                label=\"password\"\n                name=\"password\"\n                rules={[\n                {\n                    required: true,\n                    message: 'test',\n                },\n                ]}\n            >\n                <Input.Password />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\n            </Form.Item>\n            </Form>\n            {/* <SignupLink href=\"/signup\" >Not a member yet! Signup</SignupLink> */}\n        </LoginContent>\n        </LoginContainer>\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  saveUserData : (data) => dispatch(saveUserData(data))\n })\n\nexport default connect( \"\", mapDispatchToProps)(Login);\n","export const saveUserData = (data) => dispatch => {\n    dispatch({\n        type: 'SAVE_USER_DATA',\n        payload: data\n    })\n}\n\nexport const setActiveTab = (data) => dispatch => {\n    dispatch({\n        type: 'SET_ACTIVE_TAB',\n        payload: data\n    })\n}\n\nexport const saveContacts = (data) => dispatch => {\n    dispatch({\n        type: 'SAVE_USER_CONTACTS',\n        payload: data\n    })\n}\n\nexport const addNewContacts = (data) => dispatch => {\n    dispatch({\n        type: 'ADD_NEW_CONTACT',\n        payload: data\n    })\n}\n\nexport const addNewContactsBulk = (data) => dispatch => {\n    dispatch({\n        type: 'ADD_NEW_CONTACT_BULK',\n        payload: data\n    })\n}\n\nexport const removeContact = (data) => dispatch => {\n    dispatch({\n        type: 'REMOVE_CONTACT',\n        payload: data\n    })\n}\n\nexport const editContact = (data) => dispatch => {\n    dispatch({\n        type: 'EDIT_CONTACT',\n        payload: data\n    })\n}\n\n\n\n","import { apiPost } from '../utils/api';\nimport { API_URL } from '../constant';\n\nexport const loginApi = data => apiPost(`${API_URL}/auth/login`, data)\n","import React from 'react';\nimport { Menu } from 'antd';\nimport {setActiveTab} from \"../actions/User\"\nimport { connect } from 'react-redux';\n\nconst LeftMenu = (props) => {\n    const setTab = (type) => {\n        props.setActiveTab(type)\n    }\n    return (\n        <Menu mode={props.type} defaultSelectedKeys={[props.activeTab]}>\n            <Menu.Item key=\"dashboard\" onClick={()=>setTab(\"dashboard\")}>\n                <a href=\"#\">Dashboard</a>\n            </Menu.Item>\n            <Menu.Item key=\"contacts\" onClick={()=>setTab(\"contacts\")}>\n                <a href=\"#\">Contacts</a>\n            </Menu.Item>\n        </Menu>\n    );\n}\n\nconst mapDispatchToProps = dispatch => ({\n    setActiveTab : (data) => dispatch(setActiveTab(data))\n})\n  \nfunction mapStateToProps(state) {\n    return {\n        activeTab: state.UserReducer.activeTab,\n    };\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps)(LeftMenu);","import React, { useState } from 'react';\nimport { Menu,Radio } from 'antd';\nimport ar_EG from 'antd/lib/locale/ar_EG';\nimport en_US from 'antd/lib/locale/en_US';\nimport moment from 'moment';\nconst RightMenu = (props) => {\n\t    const [locale, setlocale] =  useState(\"en\")\n\n    const logout = () => {\n      localStorage.removeItem('loginUser')\n\t  localStorage.removeItem('token')\n    }\n\tconst  changeLocale = () => {\n    setlocale(\"en\")\n  };\n  \n    return (\n      <Menu mode={props.type} >        \n\t\t <Menu.Item key=\"Instagram\">\n\t\t <a href=\"https://www.instagram.com/hayyacomapp/\">Instagram</a>\n\t\t</Menu.Item>\n\t\t\t\t <Menu.Item key=\"Instagram\">\n\t\t <a href=\"https://www.hayyacom.com/\">Website</a>\n\t\t</Menu.Item>\n\t\t\t\t <Menu.Item key=\"Instagram\">\n\t\t <a href=\"https://www.instagram.com/hayyacomapp/\">Whatsapplink</a>\n\t\t</Menu.Item>\n<Menu.Item key=\"signout\">\n          <a href=\"./login\" onClick={()=>logout()}>Sign Out</a>\n        </Menu.Item>          \n          <Radio.Group value={locale} onChange={()=>changeLocale}>\n            <Radio.Button key=\"en\" value={en_US}>\n              English\n            </Radio.Button>\n            <Radio.Button key=\"cn\" value={ar_EG}>\n              عربى\n            </Radio.Button>\n          </Radio.Group>\n        \n      </Menu>\n    );\n}\n\nexport default RightMenu;","export default __webpack_public_path__ + \"static/media/logo.ecec5d13.png\";","import React, { useState } from 'react';\nimport LeftMenu from './LeftMenu'\nimport RightMenu from './RightMenu'\nimport { Drawer, Button,Image} from 'antd';\nimport logo from '../logo.png';\n\nconst Navbar = (props) => {\n    const [visible, setvisible] =  useState(false)\n    const showDrawer = () => {\n        setvisible(true)\n    };\n    const onClose = () => {\n        setvisible(false)\n    };\n    return (\n        <nav className=\"menuBar\">\n            <div className=\"logo\">\n\t\t\t        \n                <a href=\"#\"><img src={logo} className=\"logo\" /></a>\n            </div>\n            <div className=\"menuCon\">\n                <div className=\"leftMenu\">\n                    <LeftMenu type=\"horizontal\"/>\n                </div>\n                <div className=\"rightMenu\">\n                    <RightMenu type=\"horizontal\"/>\n                </div>\n                <Button className=\"barsMenu\" type=\"primary\" onClick={()=>showDrawer()}>\n                    <span className=\"barsBtn\"></span>\n                </Button>\n                <Drawer\n                    title=\"Basic Drawer\"\n                    placement=\"right\"\n                    closable={true}\n                    onClose={()=>onClose()}\n                    visible={visible}\n                >\n                    <LeftMenu type=\"inline\"/>\n                    <RightMenu type=\"inline\"/>\n                </Drawer>\n            </div>\n        </nav>\n    );\n}\nexport default Navbar;\n","const validateMessages = {\n    required: '${label} is required!',\n    types: {\n      email: '${label} is not a valid email!',\n      number: '${label} is not a valid number!',\n    },\n    number: {\n      range: '${label} must be between ${min} and ${max}',\n    },\n  };\n\nexport default validateMessages","import React, { useState } from 'react';\nimport { Form, Input, Button, Select, InputNumber, Modal } from 'antd';\nimport PhoneInput from 'react-phone-input-2'\nimport 'react-phone-input-2/lib/style.css'\nimport { connect } from 'react-redux';\nimport {addNewContacts} from \"../actions/User\"\nimport validateMessages from \"../utils/validationMessages\"\nimport {addContactsApi} from \"../api/contacts\"\nimport Alerts from \"./Alert\"\n\nconst AddContacts = (props) => {\n    const [visible, setVisible] = useState(false);\n    const [message, setMessage] = useState('');\n    const [isLoading, setLoading] = useState(false);\n    const [messageType, setMessageType] = useState('');\n\n    const onFinish = (values) => {\n        setMessage(\"\")\n        setLoading(true)\n        addContactsApi(values)\n        .then(res => {\n            setLoading(false)\n            setMessageType('success')\n            setVisible(false)\n            props.AddNewContacts(res.data)\n        })\n        .catch(err => {\n            const {message} = err.response.data\n            setMessageType('error')\n            setMessage(message)\n            setLoading(false)\n        })\n    };\n    return (\n        <div>\n            {message && <Alerts type={messageType} message={message}/>}\n            <Button type=\"primary\" onClick={() => setVisible(true)}>\n                Add Contact\n            </Button>\n            <Modal\n                title=\"Add new Contact\"\n                centered\n                visible={visible}\n                footer={[]} \n                onCancel={()=>setVisible(false)}\n            >\n                <div>\n                <Form name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\n                    <Form.Item\n                        name='name'\n                        label=\"Name\"\n                        rules={[\n                        {\n                            required: true,\n                        },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        name='phoneNumber'\n                        label=\"Phone Number\"\n                        rules={[\n                            {\n                                required: true,\n                            }\n                        ]}\n                    >\n                        <PhoneInput\n                            country={'sa'}\n                        />\n                    </Form.Item>\n                    <Form.Item\n                        name='totalGuest'\n                        label=\"Total No. of Guests\"\n                        initialValue={1}\n                        rules={[\n                            {\n                                type: 'number',\n                                min: 1,\n                                required:true,\n                            },\n                        ]}\n                    >\n                        <InputNumber />\n                    </Form.Item>\n                    <Form.Item\n                        name='totalChildren'\n                        label=\"Total No. of Children\"\n                        initialValue={0}\n                        rules={[\n                        {\n                            type: 'number',\n                            required:true\n                        },\n                        ]}\n                    >\n                        <InputNumber />\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n                </div>\n            </Modal>\n        </div>\n\n    )\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n    AddNewContacts : (data) => dispatch(addNewContacts(data))\n})\n  \n  export default connect( \"\", mapDispatchToProps)(AddContacts);","import { apiPost, apiPatch, apiGet, apiDelete } from '../utils/api';\nimport { API_URL } from '../constant';\n\nexport const addContactsBulkApi = data => apiPost(`${API_URL}/contacts/bulk`, data)\n\nexport const addContactsApi = data => apiPost(`${API_URL}/contacts`, data)\n\nexport const getContactsApi = data => apiGet(`${API_URL}/contacts/all/${data}`)\n\nexport const deleteContactsApi = data => apiDelete(`${API_URL}/contacts/${data}`)\n\nexport const inviteContactsApi = (data) => apiPost(`${API_URL}/invitations`, data)\n\nexport const editContactsApi = (data) => apiPatch(`${API_URL}/contacts/${data.id}`, data)\n\nexport const getInvitations = (id) => apiGet(`${API_URL}/invitations/all/${id}`)\n\nexport const getInvitationDetail = (id) => apiGet(`${API_URL}/invitations/${id}`)\n\nexport const updateInvitation = (data) => apiPatch(`${API_URL}/invitations/${data.id}`, data)\n\nexport const getInvitationStats = (id) => apiGet(`${API_URL}/invitations/stats/${id}`)\n\n","import React, { useState } from 'react';\nimport { Form, Input, Button, InputNumber, Modal } from 'antd';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\nimport { connect } from 'react-redux'; \nimport {editContactsApi} from \"../api/contacts\";\nimport {editContact} from \"../actions/User\";\nimport validateMessages from \"../utils/validationMessages\";\nimport styled from 'styled-components';\n\nconst Error = styled.p`\n    margin-top: 5px;\n    margin-bottom: 0px;\n    color: #f70505;\n`\n\nconst EditContact = (props) => {\n    const [phone, setPhone] = useState(props.contact && JSON.parse(props.contact.phoneNumber) || \"\");\n    const [error, setError] = useState(\"\")\n\n    const onFinish = (values) => {\n        console.log(values, \"values\")\n        if(!phone) {\n            setError(\"Number is required\")\n            return\n        }\n        let data = props.contact\n        data.name = values.contact.name\n        data.phoneNumber = phone\n        data.totalGuest = values.contact.totalGuest\n        data.totalChildren = values.contact.totalChildren\n        editContactsApi(data)\n        .then(res => {\n            props.closeModal(false)\n            props.EditContacts(data)\n        })\n        .catch(err => {\n            console.log(err, \"err\")\n        })\n    };\n    return (\n        <div>\n            <Modal\n                title=\"Edit Contact\"\n                centered\n                visible={true}\n                footer={[]} \n                onCancel={()=>props.closeModal(false)}\n            >\n                <div>\n                <Form name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\n                    <Form.Item\n                        name={['contact', 'name']}\n                        label=\"Name\"\n                        initialValue={props.contact && props.contact.name || \"\"}\n                        rules={[\n                        {\n                            required: true,\n                        },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        name={['contact', 'phoneNumber']}\n                        label=\"Phone Number\"\n                    >\n                        <PhoneInput\n                            inputProps={{\n                                name: ['contact', 'phoneNumber'],\n                                value: phone,\n                            }}\n\n                            onChange= {(e) => {\n                                setPhone(e)  \n                                setError(\"\")\n                            }}\n                        />\n                        {error && <Error>{error}</Error>}\n                    </Form.Item>\n                    <Form.Item\n                        name={['contact', 'totalGuest']}\n                        label=\"Total No. of Guests\"\n                        initialValue={props.contact && props.contact.totalGuest || 1}\n                        rules={[\n                        {\n                            type: 'number',\n                            required:true\n                        },\n                        ]}\n                    >   \n                            <InputNumber />\n                    </Form.Item>\n                    <Form.Item\n                        name={['contact', 'totalChildren']}\n                        label=\"Total No. of Children\"\n                        initialValue={props.contact && props.contact.totalChildren || 0}\n                        rules={[\n                        {\n                            type: 'number',\n                            required:true\n                        },\n                        ]}\n                    >\n                        <InputNumber />\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n                </div>\n            </Modal>\n        </div>\n\n    )\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n    EditContacts : (data) => dispatch(editContact(data))\n})\n  \n  export default connect( \"\", mapDispatchToProps)(EditContact);","import React, { useState, useEffect } from 'react';\nimport {saveContacts, removeContact} from \"../actions/User\"\nimport {getContactsApi, deleteContactsApi, inviteContactsApi} from \"../api/contacts\"\nimport { connect } from 'react-redux';\nimport { Modal, Table, Space } from 'antd';\nimport Loader from \"./Loader\"\nimport Alerts from \"./Alert\"\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport EditContact from './EditContact';\nimport { APP_URL } from '../constant';\n\nconst { confirm } = Modal;\nconst { Column } = Table;\n\nconst ContactList = (props) => {\n    const [selectedContact, setSelectedContact] = useState({})\n    const [visible, setVisible] = useState(false);\n    const [message, setMessage] = useState('');\n    const [isLoading, setLoading] = useState(false);\n    const [messageType, setMessageType] = useState('');\n\n    useEffect(()=>{\n        setLoading(true)\n        let userData = localStorage.getItem(\"loginUser\")\n        if(userData) {\n            userData = JSON.parse(userData)\n            getContactsApi(userData.id).then(res => {\n                const {data} = res\n                props.SaveContacts(data)\n                setLoading(false)\n            }).catch(err => {\n                console.log( err, \"err\")\n                const {message} = err.response.data\n                setMessageType('error')\n                setMessage(message)\n                setLoading(false)\n            })\n        }\n    }, [])\n\n    // const deleteContacts = (id) => {\n    //     deleteContactsApi(id).then(res => {\n    //         props.RemoveContact(id)\n    //         setLoading(false)\n    //     }).catch(err => {\n    //         const {message} = err.response.data\n    //         setMessageType('error')\n    //         setMessage(message)\n    //         setLoading(false)\n    //     })\n    // }\n\n    // const showConfirm = (id) => {\n    //     confirm({\n    //         title: 'Do you Want to delete these items?',\n    //         icon: <ExclamationCircleOutlined />,\n    //         onOk() {\n    //             deleteContacts(id)\n    //         },\n    //         onCancel() {\n    //             console.log('Cancel');\n    //         },\n    //     });\n    // }\n\n    const editContacts = (contact) => {\n        setSelectedContact(contact)\n        setVisible(true)\n    }\n\n    const inviteContact = (contact) => {\n        let event = localStorage.getItem('event')\n        if(event){\n            let data = {}\n            data.contactId = contact.id\n            data.userId = JSON.parse(localStorage.getItem('loginUser')).id\n            data.eventId = JSON.parse(event).id\n            if(contact.id && JSON.parse(event).id && JSON.parse(localStorage.getItem('loginUser')).id){\n                inviteContactsApi(data).then(res => {\n                    let event = JSON.parse(localStorage.getItem(\"event\"))\n                    let wtsappMessage =  \"\\n \" + event.message + \" \\n\"+' *موقع الحفل*'+\" \\n \" + event.locationurl+\"\\n \"+' *بطاقة الدخول الخاصة بك*'+\" \\n \"+ APP_URL+\"/invite/\"+res.invitation.id\n                    wtsappMessage = encodeURI(wtsappMessage)\n                    let wtsappLink = `https://wa.me/${contact.phoneNumber}?text=${wtsappMessage}`\n                    window.open(wtsappLink)\n                }).catch(err => {\n                    const {message} = err.response.data\n                    setMessageType('error')\n                    setMessage(message)\n                    setLoading(false)\n                })\n            }\n        } else {\n            setMessageType('error')\n            setMessage(\"Please add event first\")\n        }\n        \n    }\n\n    return (\n        <div>\n            {/* {isLoading && <Loader />} */}\n            {message && <Alerts type={messageType} message={message}/>}\n            {visible && <EditContact contact={selectedContact} visible={visible} closeModal={()=>{setVisible(false)}}/>}\n            <Table dataSource={props.contacts}>\n                <Column title=\"Name\" dataIndex=\"name\" key=\"name\" />\n                <Column title=\"Phone Number\" dataIndex=\"phoneNumber\" key=\"phoneNumber\" />\n                <Column title=\"No. of guests\" dataIndex=\"totalGuest\" key=\"totalGuest\" />\n                <Column title=\"No. of childern\" dataIndex=\"totalChildren\" key=\"totalChildren\" />\n                <Column\n                title=\"Action\"\n                key=\"action\"\n                render={(text, record) => (\n                    <Space size=\"middle\" key={record.id}>\n                        <a onClick={()=>inviteContact(record)}>Invite</a>\n                        <a onClick={()=>editContacts(record)}>Edit</a>\n                        {/* <a onClick={()=>showConfirm(record.id)}>Delete</a> */}\n                    </Space>\n                )}\n                />\n            </Table>\n        </div>\n    )\n    \n}\n\nconst mapStateToProps = (state) => {\n    return {\n        contacts: state.UserReducer.contacts,\n    };\n}\n\nconst mapDispatchToProps = dispatch => ({\n    SaveContacts : (data) => dispatch(saveContacts(data)),\n    RemoveContact: (id) => dispatch(removeContact(id))\n})\nexport default connect( mapStateToProps, mapDispatchToProps)(ContactList);","import React, { useState } from 'react';\nimport {addContactsBulkApi} from \"../api/contacts\";\nimport {addNewContactsBulk} from \"../actions/User\";\nimport { Button } from 'antd';\nimport { connect } from 'react-redux';\nimport Alerts from \"./Alert\"\n\nconst UploadContacts = (props) => {\n\n    const [message, setMessage] = useState('');\n    const [messageType, setMessageType] = useState('');\n\n    const onFinish = (values) => {\n        addContactsBulkApi(values)\n        .then(res => {\n            setMessageType('success')\n            setMessage(\"Contacts added Successfully\")\n            props.AddNewContactsBulk(res.data)\n        })\n        .catch(err => {\n            const {message} = err.response.data\n            setMessageType('error')\n            setMessage(message)\n        })\n    };\n    \n    const onChange = (e) => {\n        let file = e.target.files[0]\n        let reader = new FileReader()\n        reader.readAsText(file);\n        reader.onload = () => {\n            const result = csvJSON(reader.result)\n            onFinish(result)\n            console.log(result)\n        };\n        reader.onerror = function (error) {\n        console.log('Error: ', error);\n        }\n    }\n      \n    return (\n        <div>            \n            {message && <Alerts type={messageType} message={message}/>}\n            <div>\n                <input type=\"file\" accept=\".csv\" onChange={(e)=>onChange(e)} />\n            </div>\n        </div>\n    )\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n    AddNewContactsBulk : (data) => dispatch(addNewContactsBulk(data))\n})\n  \nexport default connect( \"\", mapDispatchToProps)(UploadContacts);\n\n\nfunction csvJSON(csv) {\n    const lines = csv.split('\\n')\n    const result = []\n    const headers = lines[0].trim().split(',')\n\n    for (let i = 1; i < lines.length; i++) {        \n        if (!lines[i])\n            continue\n        const obj = {}\n        const currentline = lines[i].split(',')\n\n        for (let j = 0; j < headers.length; j++) {\n            obj[headers[j]] = currentline[j]\n        }\n        result.push(obj)\n    }\n    return result\n}","import styled from \"styled-components\"\nimport AddContacts from \"../components/AddContacts\"\nimport ContactsList from \"../components/ContactsList\"\nimport UploadContacts from \"../components/UploadContacts\"\n\nconst ContactButtonsContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    padding: 10px 0px;\n`\n\nconst Contacts = (props) => {\n      \n    return (\n        <div>\n            <ContactButtonsContainer>\n                <UploadContacts />\n                <AddContacts />\n            </ContactButtonsContainer>\n            <ContactsList />\n        </div>\n    )\n}\n\nexport default Contacts;","\n\nexport const addNewEvent = (data) => dispatch => {\n    dispatch({\n        type: 'ADD_NEW_EVENT',\n        payload: data\n    })\n}\nexport const saveEvents = (data) => dispatch => {\n    dispatch({\n        type: 'SAVE_USER_EVENTS',\n        payload: data\n    })\n}\nexport const editEvents = (data) => dispatch => {\n    dispatch({\n        type: 'EDIT_EVENT',\n        payload: data\n    })\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Button, Select, InputNumber, Modal } from 'antd';\nimport {addNewEvent} from \"../actions/Event\"\nimport { connect } from 'react-redux';\nimport validateMessages from \"../utils/validationMessages\"\nimport {addEventsApi} from \"../api/events\"\nimport Alerts from \"./Alert\"\n\nconst AddEvent = (props) => {\n    const [visible, setVisible] = useState(false);\n    const [message, setMessage] = useState('');\n    const [isLoading, setLoading] = useState(false);\n    const [messageType, setMessageType] = useState('');\n\n    const onFinish = (values) => {\n        setMessage(\"\")\n        setLoading(true)\n        addEventsApi(values.event)\n        .then(res => {\n            setLoading(false)\n            setMessageType('success')\n            setVisible(false)\n            props.AddNewEvent(res.data)\n        })\n        .catch(err => {\n            console.log(err, \"err\")\n            const {message} = err.response.data\n            setMessageType('error')\n            setMessage(message)\n            setLoading(false)\n            setVisible(false)\n        })\n    };\n    return (\n        <div>\n            {message && <Alerts type={messageType} message={message}/>}\n            <Button type=\"primary\" onClick={() => setVisible(true)}>\n                Add Event\n            </Button>\n            <Modal\n                title=\"Add new Event\"\n                centered\n                visible={visible}\n                footer={[]} \n                onCancel={()=>setVisible(false)}\n            >\n                <div>\n                <Form name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\n                    <Form.Item\n                        name={['event', 'title']}\n                        label=\"Title\"\n                        rules={[\n                        {\n                            required: true,\n                        },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        name={['event', 'description']}\n                        label=\"Description\"\n                        rules={[\n                        {\n                            required: true,\n                        }\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        name={['event', 'locationurl']}\n                        label=\"Location Url\"\n                        rules={[\n                            {\n                                required:true\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        name={['event', 'invitationLink']}\n                        label=\"Invitation Url\"\n                        rules={[\n                            {\n                                required:true\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        name={['event', 'message']}\n                        label=\"Message\"\n                        rules={[\n                        {\n                            required:true\n                        },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        name={['event', 'reminderMessage']}\n                        label=\"Reminder Message\"\n                        rules={[\n                        {\n                            required: true,\n                        }\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n                </div>\n            </Modal>\n        </div>\n\n    )\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n    AddNewEvent : (data) => dispatch(addNewEvent(data))\n})\n  \n  export default connect( \"\", mapDispatchToProps)(AddEvent);","import { apiPost, apiPatch, apiGet, apiDelete } from '../utils/api';\nimport { API_URL } from '../constant';\n\nexport const addEventsApi = data => apiPost(`${API_URL}/events`, data)\n\nexport const getEventsApi = data => apiGet(`${API_URL}/events/all/${data}`)\n\nexport const deleteEventsApi = data => apiDelete(`${API_URL}/events/${data}`)\n\nexport const editEventsApi = (data) => apiPatch(`${API_URL}/events/${data.id}`, data)\n","import React, { useState } from 'react';\nimport { Form, Input, Button, Modal } from 'antd';\nimport {editEventsApi} from \"../api/events\"\nimport {editEvents} from \"../actions/Event\"\nimport { connect } from 'react-redux';\nimport validateMessages from \"../utils/validationMessages\"\nimport Alerts from \"./Alert\"\n\nconst EditEvent = (props) => {\n    const [message, setMessage] = useState('');\n    const [messageType, setMessageType] = useState('');\n\n    const onFinish = (values) => {\n        setMessage(\"\")\n        let data = props.event\n        data.title = values.event.title\n        data.description = values.event.description\n        data.locationurl = values.event.locationurl\n        data.message = values.event.message\n        editEventsApi(data)\n        .then(res => {\n            setMessageType('success')\n            props.closeModal(false)\n            props.EditEvents(data)\n        })\n        .catch(err => {\n            console.log(err, \"err\")\n        })\n    };\n    return (\n        <div>\n            {message && <Alerts type={messageType} message={message}/>}\n            <Modal\n                title=\"Edit Events\"\n                centered\n                visible={true}\n                footer={[]} \n                onCancel={()=>props.closeModal(false)}\n            >\n                <div>\n                <Form name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\n                    <Form.Item\n                        name={['event', 'title']}\n                        label=\"Title\"\n                        initialValue={(props.event && props.event.title) || \"\"}\n                        rules={[\n                        {\n                            required: true,\n                        },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        name={['event', 'description']}\n                        label=\"Description\"\n                        initialValue={(props.event && props.event.description) || \"\"}\n                        rules={[\n                        {\n                            required: true,\n                        }\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        name={['event', 'locationurl']}\n                        label=\"Location Url\"\n                        initialValue={(props.event && props.event.locationurl) || \"\"}\n                        rules={[\n                            {\n                                required:true\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        name={['event', 'invitationLink']}\n                        label=\"Invitation Url\"\n                        initialValue={(props.event && props.event.invitationLink) || \"\"}\n                        rules={[\n                            {\n                                required:true\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        name={['event', 'message']}\n                        label=\"Message\"\n                        initialValue={(props.event && props.event.message) || \"\"}\n                        rules={[\n                        {\n                            required:true\n                        },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        name={['event', 'reminderMessage']}\n                        label=\"Reminder Message\"\n                        initialValue={(props.event && props.event.reminderMessage) || \"\"}\n                        rules={[\n                        {\n                            required: true,\n                        }\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n                </div>\n            </Modal>\n        </div>\n\n    )\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n    EditEvents : (data) => dispatch(editEvents(data))\n})\n  \n  export default connect( \"\", mapDispatchToProps)(EditEvent);","import React, { useState, useEffect } from 'react';\nimport {saveEvents, removeEvents} from \"../actions/Event\"\nimport {getEventsApi} from \"../api/events\"\nimport { connect } from 'react-redux';\nimport { Modal, Table, Space } from 'antd';\nimport Loader from \"./Loader\"\nimport Alerts from \"./Alert\"\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport EditEvent from './EditEvent';\nconst { confirm } = Modal;\nconst { Column } = Table;\n\nconst ContactList = (props) => {\n    const [selectedEvent, setSelectedEvent] = useState({})\n    const [visible, setVisible] = useState(false);\n    const [message, setMessage] = useState('');\n    const [isLoading, setLoading] = useState(false);\n    const [messageType, setMessageType] = useState('');\n\n    // useEffect(()=>{\n    //     setLoading(true)\n    //     let userData = localStorage.getItem(\"loginUser\")\n    //     if(userData) {\n    //         userData = JSON.parse(userData)\n    //         getEventsApi(userData.id).then(res => {\n    //             const {data} = res\n    //             props.SaveEvents(data)\n    //             setLoading(false)\n    //         }).catch(err => {\n    //             console.log( err, \"err\")\n    //             const {message} = err.response.data\n    //             setMessageType('error')\n    //             setMessage(message)\n    //             setLoading(false)\n    //         })\n    //     }\n    // }, [])\n\n    // const deleteContacts = (id) => {\n    //     deleteContactsApi(id).then(res => {\n    //         props.RemoveContact(id)\n    //         setLoading(false)\n    //     }).catch(err => {\n    //         const {message} = err.response.data\n    //         setMessageType('error')\n    //         setMessage(message)\n    //         setLoading(false)\n    //     })\n    // }\n\n    // const showConfirm = (id) => {\n    //     confirm({\n    //         title: 'Do you Want to delete these items?',\n    //         icon: <ExclamationCircleOutlined />,\n    //         content: 'Some descriptions',\n    //         onOk() {\n    //             deleteContacts(id)\n    //         },\n    //         onCancel() {\n    //             console.log('Cancel');\n    //         },\n    //     });\n    // }\n\n    const editEvents = (event) => {\n        setSelectedEvent(event)\n        setVisible(true)\n    }\n\n    return (\n        <div>\n            {/* {isLoading && <Loader />} */}\n            {visible && <EditEvent event={selectedEvent} visible={visible} closeModal={()=>{setVisible(false)}}/>}\n            <Table dataSource={props.events}>\n                <Column title=\"Title\" dataIndex=\"title\" key=\"title\" />\n                <Column title=\"Description\" dataIndex=\"description\" key=\"description\" />\n                <Column title=\"Location URL\" dataIndex=\"locationurl\" key=\"locationurl\" />\n                <Column title=\"Message\" dataIndex=\"message\" key=\"message\" />\n                <Column title=\"Reminder message\" dataIndex=\"reminderMessage\" key=\"reminderMessage\" />\n                {/* <Column title=\"Invitation Link\" dataIndex=\"invitationLink\" key=\"invitationLink\" /> */}\n                <Column\n                title=\"Action\"\n                key=\"action\"\n                render={(text, record) => (\n                    <Space size=\"middle\" key={record.id}>\n                        <a onClick={()=>editEvents(record)}>Edit</a>\n                    </Space>\n                )}\n                />\n            </Table>\n        </div>\n    )\n    \n}\nconst mapStateToProps = (state) => {\n    return {\n        events: state.EventReducer.events,\n    };\n}\n\nconst mapDispatchToProps = dispatch => ({\n    SaveEvents : (data) => dispatch(saveEvents(data)),\n})\nexport default connect( mapStateToProps, mapDispatchToProps)(ContactList);","\nimport React, { useState, useEffect } from 'react';\nimport {saveInvitations} from \"../actions/Invitaion\"\nimport {getInvitations} from \"../api/contacts\"\nimport { connect } from 'react-redux';\nimport { Table, Space } from 'antd';\nimport Alerts from \"./Alert\"\nimport { APP_URL } from '../constant';\n\nconst { Column } = Table;\n\nconst InvitationList = (props) => {\n    const [selectedContact, setSelectedContact] = useState({})\n    const [visible, setVisible] = useState(false);\n    const [message, setMessage] = useState('');\n    const [isLoading, setLoading] = useState(false);\n    const [messageType, setMessageType] = useState('');\n\n    useEffect(()=>{\n        setLoading(true)\n        let userData = localStorage.getItem(\"loginUser\")\n        if(userData) {\n            userData = JSON.parse(userData)\n            getInvitations(userData.id).then(res => {\n                const {data} = res\n                props.SaveInvitations(data)\n                setLoading(false)\n            }).catch(err => {\n                console.log( err, \"err\")\n                const {message} = err.response.data\n                setMessageType('error')\n                setMessage(message)\n                setLoading(false)\n            })\n        }\n    }, [])\n    const inviteContact = (invitation) => {\n\t\tlet contact =invitation.contact\n        let event = JSON.parse(localStorage.getItem(\"event\"))\n\n\t\tlet wtsappMessage =  \"\\n \" + event.reminderMessage + \" \\n \"+'*موقع الحفل*'+\"\\n \" + event.locationurl+\"\\n\"+ '*بطاقة الدخول الخاصة بك*'+\" \\n \"+ APP_URL+\"/invite/\"+invitation.id\n\t\twtsappMessage = encodeURI(wtsappMessage)\n            let wtsappLink = `https://wa.me/${contact.phoneNumber}?text=${wtsappMessage}`\n        window.open(wtsappLink)\n    }\n\n    return (\n        <div>\n            {message && <Alerts type={messageType} message={message}/>}\n            <Table dataSource={props.invitations}>\n                <Column title=\"Name\" dataIndex={[\"contact\", \"name\"]} key=\"name\" />\n                <Column title=\"Phone Number\" dataIndex={[\"contact\", \"phoneNumber\"]} key=\"phoneNumber\" />\n                <Column title=\"No. of guests\" dataIndex={[\"contact\", \"totalGuest\"]} key=\"totalGuest\" />\n                <Column title=\"No. of childern\" dataIndex={[\"contact\", \"totalChildren\"]} key=\"totalChildren\" />\n                <Column\n                title=\"Action\"\n                key=\"action\"\n                render={(text, record) => (\n                    <Space size=\"middle\" key={record.id}>\n                        {record.status!==\"Decline\" && <a onClick={()=>inviteContact(record)}>Remind</a>}\n                        {/* <a onClick={()=>editContacts(record)}>Edit</a>\n                        <a onClick={()=>showConfirm(record.id)}>Delete</a> */}\n                    </Space>\n                )}\n                />\n            </Table>\n        </div>\n    )\n    \n}\n\nconst mapStateToProps = (state) => {\n    return {\n        invitations: state.InvitationReducer.invitations,\n    };\n}\n\nconst mapDispatchToProps = dispatch => ({\n    SaveInvitations : (data) => dispatch(saveInvitations(data)),\n    // RemoveContact: (id) => dispatch(removeContact(id))\n})\nexport default connect( mapStateToProps, mapDispatchToProps)(InvitationList);","export const saveInvitations = (data) => dispatch => {\n    dispatch({\n        type: 'SAVE_USER_INVITATIONS',\n        payload: data\n    })\n}","import React, { useState, useEffect } from 'react';\n//import QRCode from \"react-qr-code\";\nimport { Card, Col, Row } from 'antd';\nimport {getInvitationStats} from \"../api/contacts\"\nimport Alerts from \"./Alert\"\nimport styled from 'styled-components';\n//const { Meta } = Card;\n\nconst CardsContainer = styled.div`\n    padding-bottom: 30px;\n`\n\nconst Stats = (props) => {\n    const [data,  setData] = useState({})\n    const [messageType, setMessageType] = useState('');\n    const [message, setMessage] = useState('');\n    useEffect(()=>{\n        let userData = JSON.parse(localStorage.getItem(\"loginUser\"))\n        getInvitationStats(userData.id).then(res => {\n            const {data} = res\n            setData(data)\n        }).catch(err => {\n            console.log( err, \"err\")\n            setMessageType('error')\n            setMessage(\"Something went wrong please try again !!\")\n        })\n    }, [])\n\n    return (\n        <CardsContainer>\n            {message && <Alerts type={messageType} message={message}/>}\n            <div className=\"site-card-wrapper\">\n                <Row gutter={16}>\n                <Col span={8}>\n                    <Card title=\"Accepted\" bordered={false}>\n                        {data && data.acceptCount}\n                    </Card>\n                </Col>\n                <Col span={8}>\n                    <Card title=\"Declined\" bordered={false}>\n                    {data && data.declinedCount}\n                    </Card>\n                </Col>\n                <Col span={8}>\n                    <Card title=\"No Response\" bordered={false}>\n                    {data && data.nullCount}\n                    </Card>\n                </Col>\n                </Row>\n            </div>\n        </CardsContainer>\n    )\n}\n\nexport default Stats;","import React, { useState, useEffect } from 'react';\nimport AddEvent from \"../components/AddEvent\";\nimport ShowEvent from \"../components/ShowEvent\";\nimport {saveEvents, removeEvents} from \"../actions/Event\";\nimport {getEventsApi} from \"../api/events\";\nimport { connect } from 'react-redux';\nimport Invitations from '../components/Invitations'\nimport Stats from '../components/Stats'\n\nconst Dashboard = (props) => {\n\n    useEffect(()=>{\n        let userData = localStorage.getItem(\"loginUser\")\n        if(userData) {\n            userData = JSON.parse(userData)\n            getEventsApi(userData.id).then(res => {\n                const {data} = res\n                props.SaveEvents(data)\n                localStorage.setItem(\"event\", JSON.stringify(data[0]))\n            }).catch(err => {\n                console.log( err, \"err\")\n            })\n        }\n    }, [])\n\n    const getEventComponent = () => {\n        if(props.events && props.events.length){\n            return <div><h2>Events</h2><ShowEvent events={props.events}/></div>\n        } else {\n            return <AddEvent />\n        }\n\n    }\n\n    return (\n        <div>\n            {getEventComponent()}\n            <h2> Stats </h2>\n            <Stats />\n            <h2>Invitations</h2>\n            <Invitations />\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        events: state.EventReducer.events,\n    };\n}\n\nconst mapDispatchToProps = dispatch => ({\n    SaveEvents : (data) => dispatch(saveEvents(data)),\n})\nexport default connect( mapStateToProps, mapDispatchToProps)(Dashboard);","/* eslint-disable import/first */\nimport { Layout } from 'antd';\nconst { Header, Content, Footer } = Layout;\nimport Navbar from \"../components/Navbar\"\nimport { connect } from 'react-redux';\nimport Contacts from \"./Contacts\";\nimport Dashboard from \"./Dashboad\"\nimport { Helmet } from 'react-helmet';\nconst Home = (props) => {\n    const loadContent = () => {\n        if(props.activeTab === 'contacts')\n            return <Contacts />\n        if(props.activeTab === 'dashboard')\n            return <Dashboard />\n    }\n    return (\n        <Layout>\n\t\t<Helmet titleTemplate=\"%s - My App\" defaultTitle=\"My App\">\n      <meta name=\"description\" content=\"A React.js aapplication\" />\n    </Helmet>\n            <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n                <Navbar />\n            </Header>\n            <Content className=\"site-layout\" style={{ padding: '0 50px', marginTop: 64 }}>\n            <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 380 }}>\n                {loadContent()}\n            </div>\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>All right reserved © Hayyacom 2016-2021</Footer>\n        </Layout>\n    )\n}\n  \nfunction mapStateToProps(state) {\n    return {\n        activeTab: state.UserReducer.activeTab,\n    };\n}\n\nexport default connect( mapStateToProps)(Home);","import React, { useState } from 'react';\nimport { Menu,Radio } from 'antd';\nimport moment from 'moment';\nconst TopRightMenu = (props) => {\n    return (\n      <Menu mode={props.type} >        \n\t\t <Menu.Item key=\"Instagram\">\n\t\t <a href=\"https://www.instagram.com/hayyacomapp/\">Instagram</a>\n\t\t</Menu.Item>\n\t\t\t\t <Menu.Item key=\"Website\">\n\t\t <a href=\"https://www.hayyacom.com/\">Website</a>\n\t\t</Menu.Item>\n\t\t\t\t <Menu.Item key=\"Whatsapplink\">\n\t\t <a href=\"https://www.instagram.com/hayyacomapp/\">Whatsapplink</a>\n\t\t</Menu.Item>       \n      </Menu>\n    );\n}\n\nexport default TopRightMenu;","import React, { useState } from 'react';\r\n\r\nimport TopRightMenu from './TopRightMenu'\r\nimport { Drawer, Button,Image} from 'antd';\r\nimport logo from '../logo.png';\r\n\r\nconst TopNavbar = (props) => {\r\n    const [visible, setvisible] =  useState(false)\r\n    const showDrawer = () => {\r\n        setvisible(true)\r\n    };\r\n    const onClose = () => {\r\n        setvisible(false)\r\n    };\r\n    return (\r\n        <nav className=\"menuBar\">\r\n            <div className=\"logo\">\t\t        \r\n                <a href=\"#\"><img src={logo} className=\"logo\" /></a>\r\n            </div>\r\n            <div className=\"menuCon\">\r\n                <div className=\"rightMenu\">\r\n                    <TopRightMenu type=\"horizontal\"/>\r\n                </div>\r\n                <Button className=\"barsMenu\" type=\"primary\" onClick={()=>showDrawer()}>\r\n                    <span className=\"barsBtn\"></span>\r\n                </Button>\r\n                <Drawer\r\n                    title=\"Hayyacom\"\r\n                    placement=\"right\"\r\n                    closable={true}\r\n                    onClose={()=>onClose()}\r\n                    visible={visible}\r\n                >\r\n                   \r\n                    <TopRightMenu type=\"inline\"/>\r\n                </Drawer>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\nexport default TopNavbar;\r\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport QRCode from \"react-qr-code\";\nimport { Modal } from 'antd';\nimport {getInvitationDetail, updateInvitation} from \"../api/contacts\"\nimport Alerts from \"./Alert\"\nimport { Card } from 'antd';\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport logo from '../logo.png';\nimport TopNavbar from \"./TopNavbar\";\nconst { Header, Content, Footer ,Sider} = Layout;\n\n\nconst { Meta } = Card;\n\nconst CardContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n`\n\nconst QRContainer = styled.div`\n    display: flex;\n    justify-content: center;\n`\n\nconst InfoContainer = styled.div`\n    text-align: center;\n    padding: 10px;\n    font-size: 18px;\n`\nconst InviteImage = styled.img`\n    max-width: 100%;\n    width: 100%;\n`\nconst InviteBody = styled.div`\n    position: absolute;\n    z-index: 1;\n    width: 100%;\n    height: 100%;\n    top: 0px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n`\n\nconst InvitationPage = (props) => {\n    const [visible, setVisible] = useState(false);\n    const [invite,  setInvite] = useState({})\n    const [messageType, setMessageType] = useState('');\n    const [message, setMessage] = useState('');\n    useEffect(()=>{\n        const { match: { params } } = props;\n\n        getInvitationDetail(params.id).then(res => {\n            const {data} = res\n            setInvite(data)\n        }).catch(err => {\n            console.log( err, \"err\")\n            setMessageType('error')\n            setMessage(\"Something went wrong please try again !!\")\n        })\n    }, [])\n\n    useEffect(()=>{\n       if (invite.event) {\n        let elm = document.createElement(\"style\")\n        elm.innerHTML = `@font-face {\n            font-family: myFont;\n            src: url(${invite.event.fontUrl});\n        }`\n        document.head.appendChild(elm)\n        return ()=>{\n            document.head.removeChild(elm)\n        }\n       }\n    }, [invite])\n\n    const invitationAction = (type) => {\n        let data = {\n            id: invite.id,\n            status: type\n        }\n        updateInvitation(data).then(res => {\n            setMessageType('success')\n            setMessage(\"Thanks for your response !!\")\n            if(type === \"Accept\"){\n                setVisible(true)\n            }\n        }).catch(err => {\n            setMessageType('error')\n            setMessage(\"Something went wrong please try again !!\")\n        })\n    }\n\n    return (\n\t\t\n\t<Layout className=\"layout\">\n\t\n    <Header>\n\t<TopNavbar/>\t  \n    </Header>\n\t\n    <Content style={{ padding: '0 50px' }}>\n      <Breadcrumb style={{ margin: '16px 0' }}>\n        <Breadcrumb.Item>Home</Breadcrumb.Item>\n        <Breadcrumb.Item>Invitation</Breadcrumb.Item>\n      </Breadcrumb>\n      <div className=\"site-layout-content\">\n            {message && <Alerts type={messageType} message={message}/>}\n            <Card\n                style={{ width: \"100%\" }}\n                cover={\n                <img\n                    alt=\"example\"\n                    src={invite.event ? invite.event.invitationLink : \"\"}\n                />\n                }\n                actions={[\n                    <div onClick={()=> invitationAction(\"Accept\")}> <CheckOutlined /> <span>Accept</span></div>,\n\n                    <div onClick={()=> invitationAction(\"Decline\")}> <CloseOutlined /> <span>Decline</span></div>\n                ]}\n            >\n                <Meta\n                    title={\"Hi \" + (invite.contact && invite.contact.name || \"\")}\n                    description={\"You are invited to be the part of our happiness\"}\n                />\n            </Card>\n            <Modal\n                title=\"Please save QR code\"\n                centered\n                visible={visible}\n                onCancel={()=>setVisible(false)}\n                footer={[]} \n            >\n                <InviteImage src={invite.event ? invite.event.entranceLink:''} />\n                <InviteBody className=\"invitebody\">\n                    <QRContainer><QRCode size={100} value={invite && invite.id} bgColor=\"#ffffff\" fgColor=\"{invite.event ? invite.event.color:fff}\" /></QRContainer>\n                    <InfoContainer style={{color: (invite.event ? \"invite.event.color\":\"#bebebe\"), fontFamily:\"myFont\"}}>\n\t\t\t\t\t    <div>\n                            <label>Invitaion ID</label>: <span>{invite.id}</span>\n                        </div>\n                        <div>\n                            <label>Name</label>: <span>{invite.contact && invite.contact.name || \"\"}</span>\n                        </div>\n                        <div>\n                            <label>Total Guests</label>: <span>{invite.contact && invite.contact.totalGuest || \"\"}</span>\n                        </div>\n                        <div>\n                            <label>Childrens</label>: <span>{invite.contact && invite.contact.totalChildren || 0}</span>\n                        </div>\n                    </InfoContainer>\n                </InviteBody>\n            </Modal>\n\n\t  </div>\n    </Content>\n    <Footer style={{ textAlign: 'center' }}>\n\t<p> For more information  and customer support contact us via <a href=\"https://wa.me/966545676539\">Whatsapp</a> </p>\n\tAll right reserved © Hayyacom 2016-2021\n\t\n\t</Footer>\n  </Layout>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        invitations: state.InvitationReducer.invitations,\n    };\n}\n\nconst mapDispatchToProps = dispatch => ({\n    // SaveInvitations : (data) => dispatch(saveInvitations(data)),\n    // RemoveContact: (id) => dispatch(removeContact(id))\n})\nexport default connect( mapStateToProps, mapDispatchToProps)(InvitationPage);","import { Route, Switch } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport Login from \"./components/Login\";\n//import Signup from \"./components/Signup\";\nimport Home from \"./containers/Home\";\nimport InvitaionPage from './components/InvitaionPage';\nimport { Helmet } from 'react-helmet';\nfunction App() {\n  return (\n    <div>\n       <Switch>\n          <Route exact path='/' component={checkRoute} /> \n          <Route exact path='/login' component={Login} />          \n          <Route exact path='/home' component={Home} /> \n<Route exact path='/invite/:id' component={InvitaionPage} />            \n       </Switch>\n    </div>\n  );\n}\nconst checkRoute = () => {\n  let token = localStorage.getItem(\"token\")\n  if (token) {\n    return <Home />\n  } else {\n    return <Login />\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { store } from './store'\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport ar_EG from 'antd/lib/locale/ar_EG';\nimport en_US from 'antd/lib/locale/en_US';\nimport './index.css';\n\nReactDOM.render(\n   <Provider store={store} locale={ar_EG}>\n    <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}